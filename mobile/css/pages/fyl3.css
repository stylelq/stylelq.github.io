@import url("https://use.typekit.net/fln0ron.css");@font-face{font-family:'Gotham';src:url(../../fonts/gotham/GothamBlack.ttf) format("truetype");font-weight:600;font-style:normal}@font-face{font-family:'Gotham';src:url(../../fonts/gotham/GothamMedium.ttf) format("truetype");font-weight:500;font-style:normal}@keyframes moving{0%{-webkit-transform:translateX(0%);transform:translateX(0%)}100%{-webkit-transform:translateX(-50%);transform:translateX(-50%)}}.site-project{margin-bottom:-3.125rem}.fyl3-wrap{position:relative}.move-txt{transform:translate(0, 0);animation:moving 5s infinite linear}.splitted{position:relative;display:inline-block}.splitted.bold{font-weight:bold}.fyl-section1__video{position:relative;line-height:0}.fyl-section1__video--source{width:100%;position:relative}.fyl-section1__video .btn-play{top:50%;left:50%;display:inline-block;position:absolute;width:6.25rem;height:6.25rem;transform:translate(-50%, -50%);border:none}.fyl-section1__video .btn-play.is-play{background:url("../../images/project/fyl3/icon_play_btn.png?ver=211025") no-repeat center center / cover}.fyl-section2{background-color:#ffe100}.fyl-section2__wrap{padding:5.4375rem 0 5.9375rem}.fyl-section2__fix{margin:0 auto;text-align:center}.fyl-section2__fix--word{color:#000;text-transform:uppercase;text-align:center;font-size:.875rem;font-weight:300;font-family:'Gotham';line-height:.875rem;letter-spacing:.03125rem}.fyl-section2__fix--word:nth-child(2){padding:0 5.375rem}.fyl-section2__moving{overflow:hidden}.fyl-section2__moving--word{margin:0;display:inline-block;font-family:retiro-std-48pt, sans-serif;font-weight:400;font-size:6.25rem;line-height:100%;text-transform:uppercase}.fyl-section2__content{padding:3rem 0 0 1.25rem;font-size:1rem;font-weight:400;font-family:'AppleSDGothicNeo', 'Noto Sans KR', sans-serif;line-height:1.3rem;letter-spacing:-.04375rem}.fyl-section2__box{width:18.75rem}.fyl-section3{position:relative;background-color:#000}.fyl-section3__artist{padding:4.0625rem 0 7.5rem 1.25rem;color:#ffe100}.fyl-section3__title{margin:0;padding-bottom:1.625rem;display:inline-block;font-size:1rem;font-weight:300;font-family:'Gotham'}.fyl-section3__item{display:inline-block;font-size:2.25rem;font-family:retiro-std-48pt, sans-serif;line-height:4.05rem;letter-spacing:-.03125rem}.fyl-section3__item--ko{font-size:.875rem;font-family:'AppleSDGothicNeo', 'Noto Sans KR', sans-serif}.fyl-section3__item.before-opening{color:#70661d}.fyl-section3__link{display:block}.fyl-section4{position:relative;background-color:#000}.fyl-section4__work{padding:0 1.5625rem 7.5rem}.fyl-section4__list{display:grid;grid-template-columns:repeat(2, 1fr)}.fyl-section4__item{position:relative}.fyl-section4__item.right{top:3.75rem;position:relative}.fyl-section4__dim{position:absolute;background:rgba(0,0,0,0.5);width:100%;height:100%}.fyl-section4__name--eng,.fyl-section4__name--ko{margin:0;padding:0;color:#ffe100}.fyl-section4__name--eng{font-size:1rem;font-family:retiro-std-48pt, sans-serif}.fyl-section4__name--ko{font-size:.875rem;font-family:'AppleSDGothicNeo', 'Noto Sans KR', sans-serif}.fyl-section4__img{width:auto}.fyl-section5{background-color:#ffe100}.fyl-section5__content{padding:6.25rem 2.5rem 6.25rem 1.25rem}.fyl-section5__paragraph--title{margin:0;padding:0;font-size:1.5rem;font-weight:400;font-family:retiro-std-48pt, sans-serif}.fyl-section5__paragraph--txt{padding-top:.625rem;font-size:.875rem;font-weight:400;font-family:'AppleSDGothicNeo', 'Noto Sans KR', sans-serif;line-height:130%}.fyl-section5__paragraph+.fyl-section5__paragraph{padding-top:4.75rem}.gray{opacity:0.3}

/*# sourceMappingURL=data:application/json;base64, */
