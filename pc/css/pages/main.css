.main-slide__img{overflow:hidden}.main-search{position:relative;display:block;padding-top:11.25rem}.main-search__wrap{min-width:1200px;text-align:center}.main-search__top{display:block}.main-search__result{font-size:1.25rem;font-weight:400;line-height:2rem}.main-search__txt{padding-top:.3125rem;font-size:.875rem;font-weight:300}.main-search__num{color:#9B192F}.main-search__bottom{position:relative;padding:3.75rem 0}.main-search__list{display:inline-block}.main-search__item+.main-search__item{margin-left:.625rem}.main-search__item{float:left;display:inline-block;padding:.3125rem .5rem;border:1px solid #cbcbcb}.main-search__item.is-active{color:#9B192F;border:1px solid #9B192F}.main-search__inner{display:block;font-size:.875rem;font-weight:300}.main-search .search__result{width:75rem;margin:auto;margin-bottom:7.5rem}

/*# sourceMappingURL=data:application/json;base64, */
